[{"path":"https://sfcheung.github.io/modelbpp/articles/modelbpp.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get Started","text":"package used implement method presented Wu, Cheung, Leung (2020) compute Bayesian posterior probabilities set models structural equation modelling (SEM).","code":""},{"path":"https://sfcheung.github.io/modelbpp/articles/modelbpp.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Get Started","text":"user fits SEM model, target model, usual lavaan. Use model_set() enumerate neighboring models target model fitted Step 1. neighboring model model can formed adding one free parameters target model, fixing one free parameters zero target model. user can specify maximum difference degrees freedom search. function model_set) return list neighboring models target model. following results also returned: lavaan results fitting model. BIC model. Bayesian posterior probability model, normalized list models compared assuming unbiased priors.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/articles/modelbpp.html","id":"a-path-model","dir":"Articles","previous_headings":"Examples","what":"A path model","title":"Get Started","text":"sample dataset four variables: fit target model, serial mediation model: find neighboring models one degree freedom away target model. output model_set-class object print method. Bayesian posterior probabilities (BPP) suggest original model probable model among list. Instead, five models, one parameters added removed, higher Bayesian posterior probabilities. model direct path x3~x1 added substantially large Bayesian posterior probability models examined.","code":"head(dat_path_model) #>           x1          x2         x3          x4 #> 1 -0.7557271  0.60429483  0.3284368 -0.51305354 #> 2  0.1730537  0.93621400  0.9482629  1.18028504 #> 3  1.2609133  0.05582386  0.6914572 -0.03033796 #> 4  0.7085644 -0.22764562 -0.6900116 -1.72708807 #> 5 -0.3093975  1.17292540  0.1070513  0.10000488 #> 6  1.3253801  1.61523964  1.1890459  1.07274802 mod <- \" x2 ~ x1 x3 ~ x2 x4 ~ x3 \" fit <- sem(mod, dat_path_model) out <- model_set(sem_out = fit) out #>  #> Call: #> model_set(sem_out = fit) #>  #> Number of model(s) fitted: 9 #> Number of model(s) converged: 9 #> Number of model(s) passed post.check: 9 #>  #>  #> The models (sorted by BPP) #>             df     BIC   BPP BPP Cumulative #> add: x3~x1   1 709.446 1.000          1.000 #> drop: x2~x1 -1 725.472 0.000          1.000 #> add: x2~x4   1 729.357 0.000          1.000 #> add: x4~x2   1 729.818 0.000          1.000 #> add: x2~~x4  1 729.936 0.000          1.000 #> original     0 729.949 0.000          1.000 #> add: x4~x1   1 733.372 0.000          1.000 #> drop: x3~x2 -1 774.590 0.000          1.000 #> drop: x4~x3 -1 779.499 0.000          1.000 #>  #> Note: #> - BIC: Bayesian Information Criterion. #> - BPP: Bayesian posterior probability. #> - BPP Cumulative: Cumulative Bayesian posterior probability."},{"path":"https://sfcheung.github.io/modelbpp/articles/modelbpp.html","id":"a-serial-mediation-model","dir":"Articles","previous_headings":"Examples","what":"A serial mediation model","title":"Get Started","text":"sample dataset four variables: fit target model, partial serial mediation model: summary goodness fit model: model fits satisfactorily. However, examine parameter estimates, two paths, x m2 x y, significant: find neighboring models one degrees freedom away target model. examine Bayesian posterior probabilities: results suggest , set models, model one path dropped (y~x) probable fitted model.","code":"head(dat_serial_4) #>             x          m1         m2          y #> 1  0.09107195  1.31789249  1.5117871  1.3609744 #> 2 -1.96063838 -1.95093560 -0.9707598 -1.3488550 #> 3  0.20184014  0.34491926  0.4372048  0.7105520 #> 4 -2.25521708 -1.23455709 -0.9645551  0.3065775 #> 5 -0.15321350  0.05906073  1.1499614  1.3903459 #> 6 -2.00640303 -1.36336263 -1.0054832 -0.9078877 mod <- \" m1 ~ x m2 ~ m1 y  ~ m2 + x \" fit <- sem(mod, dat_serial_4) fitMeasures(fit, output = \"text\") #>  #> Model Test User Model: #>  #>   Test statistic                                 0.822 #>   Degrees of freedom                                 2 #>   P-value                                        0.663 #>  #> Model Test Baseline Model: #>  #>   Test statistic                               334.782 #>   Degrees of freedom                                 6 #>   P-value                                        0.000 #>  #> User Model versus Baseline Model: #>  #>   Comparative Fit Index (CFI)                    1.000 #>   Tucker-Lewis Index (TLI)                       1.011 #>   Bentler-Bonett Non-normed Fit Index (NNFI)     1.011 #>   Bentler-Bonett Normed Fit Index (NFI)          0.998 #>   Parsimony Normed Fit Index (PNFI)              0.333 #>   Bollen's Relative Fit Index (RFI)              0.993 #>   Bollen's Incremental Fit Index (IFI)           1.004 #>   Relative Noncentrality Index (RNI)             1.004 #>  #> Loglikelihood and Information Criteria: #>  #>   Loglikelihood user model (H0)               -214.765 #>   Loglikelihood unrestricted model (H1)       -214.354 #>                                                        #>   Akaike (AIC)                                 443.530 #>   Bayesian (BIC)                               461.766 #>   Sample-size adjusted Bayesian (SABIC)        439.658 #>  #> Root Mean Square Error of Approximation: #>  #>   RMSEA                                          0.000 #>   90 Percent confidence interval - lower         0.000 #>   90 Percent confidence interval - upper         0.153 #>   P-value H_0: RMSEA <= 0.050                    0.725 #>   P-value H_0: RMSEA >= 0.080                    0.200 #>  #> Standardized Root Mean Square Residual: #>  #>   RMR                                            0.007 #>   RMR (No Mean)                                  0.007 #>   SRMR                                           0.009 #>  #> Other Fit Indices: #>  #>   Hoelter Critical N (CN) alpha = 0.05         729.981 #>   Hoelter Critical N (CN) alpha = 0.01        1121.621 #>                                                        #>   Goodness of Fit Index (GFI)                    0.997 #>   Adjusted Goodness of Fit Index (AGFI)          0.987 #>   Parsimony Goodness of Fit Index (PGFI)         0.199 #>                                                        #>   McDonald Fit Index (MFI)                       1.006 #>                                                        #>   Expected Cross-Validation Index (ECVI)         0.148 parameterEstimates(fit) #>   lhs op rhs    est    se      z pvalue ci.lower ci.upper #> 1  m1  ~   x  0.787 0.059 13.398  0.000    0.672    0.903 #> 2  m2  ~  m1  0.728 0.057 12.747  0.000    0.616    0.840 #> 3   y  ~  m2  0.951 0.072 13.208  0.000    0.810    1.092 #> 4   y  ~   x -0.013 0.065 -0.191  0.848   -0.141    0.116 #> 5  m1 ~~  m1  0.278 0.039  7.071  0.000    0.201    0.356 #> 6  m2 ~~  m2  0.254 0.036  7.071  0.000    0.184    0.324 #> 7   y ~~   y  0.208 0.029  7.071  0.000    0.150    0.266 #> 8   x ~~   x  0.806 0.000     NA     NA    0.806    0.806 out <- model_set(sem_out = fit) out #>  #> Call: #> model_set(sem_out = fit) #>  #> Number of model(s) fitted: 9 #> Number of model(s) converged: 9 #> Number of model(s) passed post.check: 9 #>  #>  #> The models (sorted by BPP) #>             df     BIC   BPP BPP Cumulative #> drop: y~x   -1 457.198 0.865          0.865 #> original     0 461.766 0.088          0.953 #> add: m1~y    1 465.596 0.013          0.966 #> add: y~m1    1 465.763 0.012          0.978 #> add: m1~~y   1 465.763 0.012          0.990 #> add: m2~x    1 466.156 0.010          1.000 #> drop: m2~m1 -1 553.667 0.000          1.000 #> drop: m1~x  -1 559.942 0.000          1.000 #> drop: y~m2  -1 560.335 0.000          1.000 #>  #> Note: #> - BIC: Bayesian Information Criterion. #> - BPP: Bayesian posterior probability. #> - BPP Cumulative: Cumulative Bayesian posterior probability."},{"path":"https://sfcheung.github.io/modelbpp/articles/modelbpp.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Get Started","text":"Wu, H., Cheung, S. F., & Leung, S. O. (2020). Simple use BIC assess model selection uncertainty: illustration using mediation moderation models. Multivariate Behavioral Research, 55(1), 1â€“16. https://doi.org/10.1080/00273171.2019.1574546","code":""},{"path":"https://sfcheung.github.io/modelbpp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shu Fai Cheung. Author, maintainer.","code":""},{"path":"https://sfcheung.github.io/modelbpp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheung S (2023). modelbpp: Model Bayesian Posterior Probability Related Measures. R package version 0.0.0.9007, https://sfcheung.github.io/modelbpp/.","code":"@Manual{,   title = {modelbpp: Model Bayesian Posterior Probability and Related Measures},   author = {Shu Fai Cheung},   year = {2023},   note = {R package version 0.0.0.9007},   url = {https://sfcheung.github.io/modelbpp/}, }"},{"path":"https://sfcheung.github.io/modelbpp/index.html","id":"modelbpp-model-posterior-probability-and-related-measures","dir":"","previous_headings":"","what":"Model Bayesian Posterior Probability and Related Measures","title":"Model Bayesian Posterior Probability and Related Measures","text":"package assessing model uncertainty structural equation modeling (SEM) using BIC posterior probabilities, AIC weight (added), similar measures fitting neighboring models. package name, modelbpp, stands model bayesian posterior pability. Pease visit GitHub page information https://sfcheung.github.io/modelbpp/","code":""},{"path":"https://sfcheung.github.io/modelbpp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Bayesian Posterior Probability and Related Measures","text":"Stable release versions package can downloaded : https://github.com/sfcheung/modelbpp/releases latest developmental--stable version package can installed remotes::install_github:","code":"remotes::install_github(\"sfcheung/modelbpp\")"},{"path":"https://sfcheung.github.io/modelbpp/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"Model Bayesian Posterior Probability and Related Measures","text":"package still development. Please report bugs issues. Comments suggestions also welcomed.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_cfa.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample dataset based on a CFA (for testing) â€” dat_cfa","title":"A sample dataset based on a CFA (for testing) â€” dat_cfa","text":"Generated following path model, n = 200","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_cfa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample dataset based on a CFA (for testing) â€” dat_cfa","text":"","code":"dat_cfa"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_cfa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample dataset based on a CFA (for testing) â€” dat_cfa","text":"data frame six variables: x1 Indicator x2 Indicator x3 Indicator x4 Indicator x5 Indicator x6 Indicator","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_cfa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A sample dataset based on a CFA (for testing) â€” dat_cfa","text":"model used generate dataset:","code":"f1 =~ x1 + x2 + x3 + x5 f2 =~ x3 + x4 + x5 + x6 f1 ~~ f2"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample dataset based on a path model (for testing) â€” dat_path_model","title":"A sample dataset based on a path model (for testing) â€” dat_path_model","text":"Generated following path model, n = 100","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample dataset based on a path model (for testing) â€” dat_path_model","text":"","code":"dat_path_model"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample dataset based on a path model (for testing) â€” dat_path_model","text":"data frame four variables: x1 Predictor x2 Predictor x3 Mediator x4 Outcome","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A sample dataset based on a path model (for testing) â€” dat_path_model","text":"model used generate dataset:","code":"x1 ~~ x2 x3 ~ x1 + x2 x4 ~ x3 + x1 + x2"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model_p06.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample dataset based on a complex path model (for testing) â€” dat_path_model_p06","title":"A sample dataset based on a complex path model (for testing) â€” dat_path_model_p06","text":"Generated following path model, n = 200","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model_p06.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample dataset based on a complex path model (for testing) â€” dat_path_model_p06","text":"","code":"dat_path_model_p06"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model_p06.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample dataset based on a complex path model (for testing) â€” dat_path_model_p06","text":"data frame six variables: x1 Predictor x2 Predictor x3 Predictor y4 Mediator y5 Mediator y6 Outcome","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_path_model_p06.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A sample dataset based on a complex path model (for testing) â€” dat_path_model_p06","text":"model used generate dataset:","code":"y4 ~  x1 + x2 + x3 y5 ~  y4 + x1 + x2 y6 ~  y4 + y5 + x1 + x2 + x3 x1 ~~ x2 + x3 x2 ~~ x3"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_sem.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample dataset based on an SEM model (for testing) â€” dat_sem","title":"A sample dataset based on an SEM model (for testing) â€” dat_sem","text":"Generated SEM model, n = 250","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_sem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample dataset based on an SEM model (for testing) â€” dat_sem","text":"","code":"dat_sem"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_sem.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample dataset based on an SEM model (for testing) â€” dat_sem","text":"object class data.frame 250 rows 16 columns.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_sem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A sample dataset based on an SEM model (for testing) â€” dat_sem","text":"model fitted:","code":"f1 =~ x1 + x2 + x3 + x4 f2 =~ x5 + x6 + x7 + x8 f3 =~ x9 + x10 + x11 + x12 f4 =~ x13 + x14 + x15 + x16 f3 ~ f1 + f2 f4 ~ f3"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_serial_4.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample dataset based on a serial mediation path model (for\ntesting) â€” dat_serial_4","title":"A sample dataset based on a serial mediation path model (for\ntesting) â€” dat_serial_4","text":"Generated following path model, n = 100","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_serial_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample dataset based on a serial mediation path model (for\ntesting) â€” dat_serial_4","text":"","code":"dat_serial_4"},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_serial_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample dataset based on a serial mediation path model (for\ntesting) â€” dat_serial_4","text":"data frame four variables: x Predictor m1 Mediator m2 Mediator y Outcome","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/dat_serial_4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A sample dataset based on a serial mediation path model (for\ntesting) â€” dat_serial_4","text":"model used generate dataset:","code":"m1 ~ x m2 ~ m1 y  ~ m2"},{"path":"https://sfcheung.github.io/modelbpp/reference/fit_many.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a List of Models â€” fit_many","title":"Fit a List of Models â€” fit_many","text":"Fit list models dataset.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/fit_many.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a List of Models â€” fit_many","text":"","code":"fit_many(   model_list,   sem_out,   parallel = FALSE,   ncores = max(parallel::detectCores(logical = FALSE) - 1, 1),   make_cluster_args = list(),   progress = TRUE,   verbose = TRUE )"},{"path":"https://sfcheung.github.io/modelbpp/reference/fit_many.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a List of Models â€” fit_many","text":"model_list list parameter tables used lavaan::lavaan() update(). Usually generated get_add() get_drop(). sem_out output structural equation modeling function. Currently support lavaan::lavaan . Usually one used get_add() get_drop() generate list models. parallel TRUE, parallel processing used fit models. Default FALSE. ncores Numeric. number CPU cores used parallel TRUE. make_cluster_args list named arguments passed parallel::makeCluster(). Used advanced users configure cluster parallel TRUE. Default list(). progress Whether progress bar displayed, implemented pbapply package. Default TRUE. verbose Whether additional messages displayed, expected processing time. Default TRUE.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/fit_many.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a List of Models â€” fit_many","text":"object class sem_outs, list following elements: fit: named list lavaan::lavaan() output objects update() fitting model added parameters. change: numeric vector, length fit. change model df fit. positive number denotes one less free parameter. negative number denotes one free parameter one less constraint. converged: named vector boolean values, length fit. Indicates whether fit converged . post_check: named vector boolean values, length fit. Indicates whether solution fit admissible . Checked lavaan::lavInspect() argument set \"post.check\".","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/fit_many.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a List of Models â€” fit_many","text":"receives list models, defined lavaan parameter tables (usually generated get_add() /get_drop()), fit dataset stored lavaan-class object.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/fit_many.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a List of Models â€” fit_many","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/fit_many.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a List of Models â€” fit_many","text":"","code":"library(lavaan) #> This is lavaan 0.6-16 #> lavaan is FREE software! Please report any bugs. dat <- dat_path_model mod <- \" x3 ~ a*x1 + b*x2 x4 ~ a*x1 ab := a*b \" fit <- sem(mod, dat_path_model, fixed.x = TRUE) mod_to_add <- get_add(fit) fit_many(mod_to_add, fit) #>  #> Call: #> fit_many(model_list = mod_to_add, sem_out = fit) #>  #> Number of model(s) fitted: 2 #> Number of model(s) converged: 2 #> Number of model(s) passed post.check: 2 #>  #> The modifications: #> add: x4~x2 #> add: (x3~x1),(x4~x1)"},{"path":"https://sfcheung.github.io/modelbpp/reference/get_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Models That Are Less Restricted â€” get_add","title":"Models That Are Less Restricted â€” get_add","text":"Generate list models one fixed parameter freed.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Models That Are Less Restricted â€” get_add","text":"","code":"get_add(   sem_out,   must_add = NULL,   must_not_add = NULL,   remove_constraints = TRUE,   exclude_error_cov = TRUE,   df_change = 1,   model_id = NA,   keep_correct_df_change = TRUE )"},{"path":"https://sfcheung.github.io/modelbpp/reference/get_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Models That Are Less Restricted â€” get_add","text":"sem_out output structural equation modeling function. Currently support lavaan::lavaan . Usually one used get_add() get_drop() generate list models. must_add character vector parameters, named lavaan::lavaan() style (e.g., \"y ~ x\"), must added. Default `NULL``. must_not_add character vector parameters, named lavaan::lavaan() style (e.g., \"x1 ~~ x1\"), must added. Default NULL. remove_constraints Whether equality constraints removed. Default ``TRUE`. exclude_error_cov Exclude error covariances indicators. Default TRUE. df_change many degrees freedom (df) away list. models df change less equal number included. Default 1. model_id identification number starting model. Default NA, identification number. keep_correct_df_change Keep tables actual df change equal expected df change.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Models That Are Less Restricted â€” get_add","text":"object class partables, named list parameter tables, used lavaan::lavaan() update() fitting model added parameters.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Models That Are Less Restricted â€” get_add","text":"Generate list models one fixed parameter freed (degrees freedom, df, increases one ). model equality constraints, models one constraints released also included. Conceptually, paths covariances \"added\" form list models. models included identified lavaan::modificationIndices(). models checked lavaan make sure increase model degrees freedom expected value.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/reference/get_add.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Models That Are Less Restricted â€” get_add","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Models That Are Less Restricted â€” get_add","text":"","code":"library(lavaan) dat <- dat_path_model mod <- \" x3 ~ a*x1 + b*x2 x4 ~ a*x1 ab := a*b \" fit <- sem(mod, dat_path_model, fixed.x = TRUE) mod_to_add <- get_add(fit) mod_to_add #>  #> Call: #> get_add(sem_out = fit) #>  #> Number of parameter tables: 2 #>  #> The modifications: #> add: x4~x2 #> add: (x3~x1),(x4~x1)"},{"path":"https://sfcheung.github.io/modelbpp/reference/get_drop.html","id":null,"dir":"Reference","previous_headings":"","what":"Models That Are More Restricted â€” get_drop","title":"Models That Are More Restricted â€” get_drop","text":"Generate list models one free parameter dropped (fixed zero).","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_drop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Models That Are More Restricted â€” get_drop","text":"","code":"get_drop(   sem_out,   must_drop = NULL,   must_not_drop = NULL,   df_change = 1,   model_id = NA,   keep_correct_df_change = TRUE )"},{"path":"https://sfcheung.github.io/modelbpp/reference/get_drop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Models That Are More Restricted â€” get_drop","text":"sem_out output SEM function. Currently support lavaan::lavaan . Usually one used get_add() get_drop() generate list models. must_drop character vector parameters, named lavaan::lavaan() style (e.g., \"y ~ x\"), must included. Default NULL. must_not_drop character vector parameters, named lavaan::lavaan() style (e.g., \"x1 ~~ x1\"), must included. Default NULL. df_change many degrees freedom away list. models df change less equal number included. Default 1. model_id identification number starting model. Default NA, identification number. keep_correct_df_change Keep tables actual df change equal expected df change.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_drop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Models That Are More Restricted â€” get_drop","text":"object class partables, named list parameter tables, used lavaan::lavaan() update() fitting model added parameters.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_drop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Models That Are More Restricted â€” get_drop","text":"Generate list models one free parameters dropped, , fixed zero (degrees freedom, df, increases one ). free parameters included pool candidates, except explicitly requested kept. models checked lavaan make sure increase model degrees freedom expected value.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/reference/get_drop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Models That Are More Restricted â€” get_drop","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/get_drop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Models That Are More Restricted â€” get_drop","text":"","code":"library(lavaan)  dat <- dat_path_model mod <- \" x3 ~ a*x1 + b*x2 x4 ~ a*x1 + x2 ab := a*b \"  fit <- sem(mod, dat_path_model, fixed.x = TRUE) mod_to_drop <- get_drop(fit) mod_to_drop #>  #> Call: #> get_drop(sem_out = fit) #>  #> Number of parameter tables: 3 #>  #> The modifications: #> drop: x3~x2 #> drop: x4~x2 #> drop: x3~~x4"},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"Identify neighboring models, fit , return Bayesian posterior probabilities.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"","code":"model_set(   sem_out,   must_add = NULL,   must_not_add = NULL,   must_drop = NULL,   must_not_drop = NULL,   remove_constraints = TRUE,   exclude_error_cov = TRUE,   df_change_add = 1,   df_change_drop = 1,   parallel = FALSE,   ncores = max(parallel::detectCores(logical = FALSE) - 1, 1),   make_cluster_args = list(),   progress = TRUE,   verbose = TRUE )"},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"sem_out output SEM function. Currently support lavaan::lavaan . Usually one used get_add() get_drop() generate list models. must_add character vector parameters, named lavaan::lavaan() style (e.g., \"y ~ x\"), must added. Default `NULL``. must_not_add character vector parameters, named lavaan::lavaan() style (e.g., \"x1 ~~ x1\"), must added. Default NULL. must_drop character vector parameters, named lavaan::lavaan() style (e.g., \"y ~ x\"), must included. Default NULL. must_not_drop character vector parameters, named lavaan::lavaan() style (e.g., \"x1 ~~ x1\"), must included. Default NULL. remove_constraints Whether equality constraints removed. Default ``TRUE`. exclude_error_cov Exclude error covariances indicators. Default TRUE. df_change_add many degrees freedom (df) away list adding parameters releasing constraints. models df change less equal number included. Default 1. df_change_drop many df away list removing parameters. models df change less equal number included. Default 1. parallel TRUE, parallel processing used fit models. Default FALSE. ncores Numeric. number CPU cores used parallel TRUE. make_cluster_args list named arguments passed parallel::makeCluster(). Used advanced users configure cluster parallel TRUE. Default list(). progress Whether progress bar displayed, implemented pbapply package. Default TRUE. verbose Whether additional messages displayed, expected processing time. Default TRUE.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"object class model_set, list following elements: model: named list parameter tables. represent models identified. bic: numeric vector, length model. BIC model. postprob: numeric vector, length model. posterior probability model. fit: named list lavaan::lavaan() output objects update() fitting model added parameters, length model. change: numeric vector, length model. change model df fit. positive number denotes one less free parameter. negative number denotes one free parameter one less constraint. converged: named vector boolean values, length model. Indicates whether fit converged . post_check: named vector boolean values, length model. Indicates whether solution fit admissible . Checked lavaan::lavInspect().","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"computes Bayesian posterior probabilities set models method presented Wu, Cheung, Leung (2020). First, list model identified based user-specified criteria. default, models differ fitted model one degree freedom, 1-df-away neighboring models, found using get_add() get_drop. Second, models fitted sample dataset, BICs computed. Third, Bayesian posterior probabilities computed using BICs. Equal prior probabilities models fitted assumed current version. results can printed, models sorted descending order Bayesian posterior probabilities.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"Wu, H., Cheung, S. F., & Leung, S. O. (2020). Simple use BIC assess model selection uncertainty: illustration using mediation moderation models. Multivariate Behavioral Research, 55(1), 1--16. doi:10.1080/00273171.2019.1574546","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/model_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Posterior Probabilities\nof Neighboring Models â€” model_set","text":"","code":"library(lavaan)  dat <- dat_path_model  mod <- \" x3 ~ a*x1 + b*x2 x4 ~ a*x1 ab := a*b \"  fit <- sem(mod, dat_path_model, fixed.x = TRUE)  out <- model_set(fit) out #>  #> Call: #> model_set(sem_out = fit) #>  #> Number of model(s) fitted: 5 #> Number of model(s) converged: 5 #> Number of model(s) passed post.check: 5 #>  #>  #> The models (sorted by BPP) #>                      df     BIC   BPP BPP Cumulative #> add: x4~x2            1 400.291 1.000          1.000 #> original              0 431.452 0.000          1.000 #> add: (x3~x1),(x4~x1)  1 435.397 0.000          1.000 #> drop: x3~~x4         -1 441.229 0.000          1.000 #> drop: x3~x2          -1 455.926 0.000          1.000 #>  #> Note: #> - BIC: Bayesian Information Criterion. #> - BPP: Bayesian posterior probability. #> - BPP Cumulative: Cumulative Bayesian posterior probability."},{"path":"https://sfcheung.github.io/modelbpp/reference/modelbpp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"modelbpp: Model Bayesian Posterior Probability and Related Measures â€” modelbpp-package","title":"modelbpp: Model Bayesian Posterior Probability and Related Measures â€” modelbpp-package","text":"Fits neighboring models fitted structural equation model assesses model uncertainty fitted model. Currently supports BIC posterior probabilities (Wu, Cheung, Leung, 2020, doi:10.1080/00273171.2019.1574546 ) may support measures future.","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/reference/modelbpp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"modelbpp: Model Bayesian Posterior Probability and Related Measures â€” modelbpp-package","text":"Maintainer: Shu Fai Cheung shufai.cheung@gmail.com (ORCID)","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.model_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a model_set-Class Object â€” print.model_set","title":"Print a model_set-Class Object â€” print.model_set","text":"Print content model_set-class object","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.model_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a model_set-Class Object â€” print.model_set","text":"","code":"# S3 method for model_set print(   x,   bic_digits = 3,   bpp_digits = 3,   sort_models = TRUE,   max_models = 10,   ... )"},{"path":"https://sfcheung.github.io/modelbpp/reference/print.model_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a model_set-Class Object â€” print.model_set","text":"x model_set-class object. bic_digits number decimal places displayed BIC. Default 3. bpp_digits number decimal places displayed Bayesian posterior probability. Default 3. sort_models Whether models sorted Bayesian posterior probability. Default TRUE. max_models maximum number models printed. Default 10. ... Optional arguments. Ignored.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.model_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a model_set-Class Object â€” print.model_set","text":"x returned invisibly. Called side effect.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.model_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a model_set-Class Object â€” print.model_set","text":"Details (Include subjects verbs.) (Use 3rd person forms verbs.)","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/reference/print.model_set.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print a model_set-Class Object â€” print.model_set","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.model_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a model_set-Class Object â€” print.model_set","text":"","code":"library(lavaan)  dat <- dat_path_model  mod <- \" x3 ~ a*x1 + b*x2 x4 ~ a*x1 ab := a*b \"  fit <- sem(mod, dat_path_model, fixed.x = TRUE)  out <- model_set(fit) out #>  #> Call: #> model_set(sem_out = fit) #>  #> Number of model(s) fitted: 5 #> Number of model(s) converged: 5 #> Number of model(s) passed post.check: 5 #>  #>  #> The models (sorted by BPP) #>                      df     BIC   BPP BPP Cumulative #> add: x4~x2            1 400.291 1.000          1.000 #> original              0 431.452 0.000          1.000 #> add: (x3~x1),(x4~x1)  1 435.397 0.000          1.000 #> drop: x3~~x4         -1 441.229 0.000          1.000 #> drop: x3~x2          -1 455.926 0.000          1.000 #>  #> Note: #> - BIC: Bayesian Information Criterion. #> - BPP: Bayesian posterior probability. #> - BPP Cumulative: Cumulative Bayesian posterior probability."},{"path":"https://sfcheung.github.io/modelbpp/reference/print.partables.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a partables-Class Object â€” print.partables","title":"Print a partables-Class Object â€” print.partables","text":"Print content partables-class object","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.partables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a partables-Class Object â€” print.partables","text":"","code":"# S3 method for partables print(x, max_tables = 10, ...)"},{"path":"https://sfcheung.github.io/modelbpp/reference/print.partables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a partables-Class Object â€” print.partables","text":"x partables-class object. max_tables maximum number modifications printed. Default 10. ... Optional arguments. Ignored.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.partables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a partables-Class Object â€” print.partables","text":"x returned invisibly. Called side effect.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.partables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a partables-Class Object â€” print.partables","text":"print method output get_add() get_drop().","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/reference/print.partables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print a partables-Class Object â€” print.partables","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.partables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a partables-Class Object â€” print.partables","text":"","code":"library(lavaan) dat <- dat_path_model mod <- \" x3 ~ a*x1 + b*x2 x4 ~ a*x1 ab := a*b \" fit <- sem(mod, dat_path_model, fixed.x = TRUE) mod_to_add <- get_add(fit) mod_to_add #>  #> Call: #> get_add(sem_out = fit) #>  #> Number of parameter tables: 2 #>  #> The modifications: #> add: x4~x2 #> add: (x3~x1),(x4~x1)  print(mod_to_add, max_tables = 1) #>  #> Call: #> get_add(sem_out = fit) #>  #> Number of parameter tables: 2 #>  #> The first 1 modification(s): #> add: x4~x2  mod_to_drop <- get_drop(fit) mod_to_drop #>  #> Call: #> get_drop(sem_out = fit) #>  #> Number of parameter tables: 2 #>  #> The modifications: #> drop: x3~x2 #> drop: x3~~x4  print(mod_to_drop, max_tables = 1) #>  #> Call: #> get_drop(sem_out = fit) #>  #> Number of parameter tables: 2 #>  #> The first 1 modification(s): #> drop: x3~x2"},{"path":"https://sfcheung.github.io/modelbpp/reference/print.sem_outs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an sem_outs-Class Object â€” print.sem_outs","title":"Print an sem_outs-Class Object â€” print.sem_outs","text":"Print content sem_outs-class object","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.sem_outs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an sem_outs-Class Object â€” print.sem_outs","text":"","code":"# S3 method for sem_outs print(x, max_models = 10, ...)"},{"path":"https://sfcheung.github.io/modelbpp/reference/print.sem_outs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an sem_outs-Class Object â€” print.sem_outs","text":"x sem_outs-class object. max_models maximum number models printed. Default 10. ... Optional arguments. Ignored.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.sem_outs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an sem_outs-Class Object â€” print.sem_outs","text":"x returned invisibly. Called side effect.","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.sem_outs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print an sem_outs-Class Object â€” print.sem_outs","text":"print method output fit_many().","code":""},{"path":[]},{"path":"https://sfcheung.github.io/modelbpp/reference/print.sem_outs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print an sem_outs-Class Object â€” print.sem_outs","text":"Shu Fai Cheung https://orcid.org/0000-0002-9871-9448","code":""},{"path":"https://sfcheung.github.io/modelbpp/reference/print.sem_outs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an sem_outs-Class Object â€” print.sem_outs","text":"","code":"library(lavaan) dat <- dat_path_model mod <- \" x3 ~ a*x1 + b*x2 x4 ~ a*x1 ab := a*b \" fit <- sem(mod, dat_path_model, fixed.x = TRUE) mod_to_add <- get_add(fit) out <- fit_many(mod_to_add, fit) out #>  #> Call: #> fit_many(model_list = mod_to_add, sem_out = fit) #>  #> Number of model(s) fitted: 2 #> Number of model(s) converged: 2 #> Number of model(s) passed post.check: 2 #>  #> The modifications: #> add: x4~x2 #> add: (x3~x1),(x4~x1)  print(out, max_models = 1) #>  #> Call: #> fit_many(model_list = mod_to_add, sem_out = fit) #>  #> Number of model(s) fitted: 2 #> Number of model(s) converged: 2 #> Number of model(s) passed post.check: 2 #>  #> The first 1 modifications(s): #> add: x4~x2"},{"path":"https://sfcheung.github.io/modelbpp/news/index.html","id":"modelbpp-0009007","dir":"Changelog","previous_headings":"","what":"modelbpp 0.0.0.9007","title":"modelbpp 0.0.0.9007","text":"Migrating. (0.0.0.9001) Initial setup. (0.0.0.9001) Migrated files previous repo. (0.0.0.9001) Parameters constraints stored lists instead strings. (0.0.0.9002) Factored lines get_add() get_drop() internal helpers. (0.0.0.9002) Main functions now return custom S3 class objects. (0.0.0.9003) Added print method partables-class objects. (0.0.0.9004) Added print method sem_outs-class objects. (0.0.0.9005) Added print method model_set-class objects. (0.0.0.9006) Updated help pages functions (0.0.0.9007)","code":""}]
