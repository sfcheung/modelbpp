% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_graph.R
\name{model_graph}
\alias{model_graph}
\title{Generate a Graph of Models}
\usage{
model_graph(
  object,
  node_size_by_x = TRUE,
  x = NULL,
  node_size = 5,
  min_size = 5,
  max_size = 35,
  color_original = "lightblue",
  color_add = "burlywood1",
  color_drop = "lightgreen",
  color_label = "black",
  node_label_size = 2,
  ...
)
}
\arguments{
\item{object}{Support only a
\code{model_set} object for now.}

\item{node_size_by_x}{Logical. Whether
node (vertex) sizes are determined
by a variable. Default is \code{TRUE}.
See \code{x} below on how size is
determined.}

\item{x}{If not \code{NULL}, it should be
a numeric vector of length equal to
the number of models. The node sizes
will be proportional to the values
of \code{x}, offset by \code{min_size}. If
\code{NULL}, the default, the BIC
posterior probabilities
stored in \code{object} will be retrieved.}

\item{node_size}{If \code{node_size_by_x}
is \code{FALSE}, this is the size for
all nodes.}

\item{min_size}{The minimum size
of a node. Default is 5.}

\item{max_size}{The maximum size
of a node. Default is 35.}

\item{color_original}{The color
of node of the original model.
Default is \code{"lightblue"}.}

\item{color_add}{The color of
the nodes of models formed by
adding one or more free parameters to
the original model.
Default is \code{"burlywood1"}.}

\item{color_drop}{The color of
the nodes of models formed by
dropping one or more free parameters
to the original model.
Default is \code{"lightgreen"}.}

\item{color_label}{The color of the
text labels of the nodes. Default
is \code{"black"}.}

\item{node_label_size}{The size of
the labels of the nodes. Default is
2.}

\item{...}{Optional arguments. Not
used for now.}
}
\value{
A \code{model_graph}-class object that is
can be used as as \code{igraph}-object,
with a plot method with settings
suitable for plotting a network
of models with BIC posterior probability
}
\description{
Generate an 'igraph' object from a
'model_set' object.
}
\examples{

library(lavaan)

dat <- dat_path_model

mod <-
"
x3 ~ a*x1 + b*x2
x4 ~ a*x1
ab := a*b
"

fit <- sem(mod, dat_path_model, fixed.x = TRUE)

out <- model_set(fit)
out

g <- model_graph(out)
plot(g)

}
