% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_graph.R
\name{model_graph}
\alias{model_graph}
\title{Generate a Graph of Models}
\usage{
model_graph(
  object,
  node_size_by_x = TRUE,
  x = NULL,
  node_size = 5,
  min_size = 5,
  max_size = 35,
  color_original = "lightblue",
  color_add = "burlywood1",
  color_drop = "lightgreen",
  color_others = "lightgrey",
  color_label = "black",
  node_label_size = 1,
  original = "original",
  ...
)
}
\arguments{
\item{object}{Must be a
\code{model_set}-class object for now.}

\item{node_size_by_x}{Logical. Whether
node (vertex) sizes are determined
by a variable. Default is \code{TRUE}.
See \code{x} below on how size is
determined.}

\item{x}{If not \code{NULL}, it should be
a numeric vector of length equal to
the number of models. The node sizes
will be proportional to the values
of \code{x}, offset by \code{min_size}. If
\code{NULL}, the default, the BIC
posterior probabilities
stored in \code{object} will be retrieved.}

\item{node_size}{If \code{node_size_by_x}
is \code{FALSE}, this is the size for
all nodes.}

\item{min_size}{The minimum size
of a node. Default is 5.}

\item{max_size}{The maximum size
of a node. Default is 35.}

\item{color_original}{The color
of node of the original model.
Default is \code{"lightblue"}.}

\item{color_add}{The color of
the nodes of models formed by
adding one or more free parameters to
the original model.
Default is \code{"burlywood1"}.}

\item{color_drop}{The color of
the nodes of models formed by
dropping one or more free parameters
from the original model.
Default is \code{"lightgreen"}.}

\item{color_others}{The color
of other models not specified above.
Default is \code{"grey50"}.}

\item{color_label}{The color of the
text labels of the nodes. Default
is \code{"black"}.}

\item{node_label_size}{The size of
the labels of the nodes. Default is
1.}

\item{original}{String. The name
of the original model (target model).
Default is \code{"original"}.}

\item{...}{Optional arguments. Not
used for now.}
}
\value{
A \code{model_graph}-class object that
can be used as as an \code{igraph}-object,
with a plot method (\code{\link[=plot.model_graph]{plot.model_graph()}})
with settings
suitable for plotting a network
of models with BIC posterior probabilities
computed.
}
\description{
Generate an 'igraph' object from a
'model_set' object.
}
\details{
It extracts the model list stored
in \code{object}, creates an adjacency
matrix, and then creates an \code{igraph}
object customized for visualizing
model relations.
\subsection{Construction of the Graph}{

This is the default way to construct
the graph when the model set is
automatically by \code{\link[=model_set]{model_set()}}.
\itemize{
\item Each model is connected by an
arrow, pointing from one model to
another model that is formed by

a. adding one free parameter, or

b, releasing one equality constraint
between two parameters.
}

That is, it points to a model with
one \emph{less} degree of freedom, and
is nested within that model in
parameter sense (but see below on
results with user-provided models).
\itemize{
\item By default, the size of the node
for each model is scaled by its
BIC posterior probability, if
available. See \emph{The Size of a Node}
below.
\item The original model, the models with
more degrees of freedom,
and the models with fewer degrees
of freedom are colored differently.
\item The default layout is the Sugiyama
layout, with simpler models (models
with fewer degrees of freedom) on
the top. The lower a model is in
the network, the more the degrees
of freedom it has. This layout is
suitable for showing the nested
relations of the models.
}

The output is an \code{igraph} object.
Users can customize it in any way
they want using functions from
the \code{igraph} package.

If a model does not differ from any
other models by exactly one \emph{df},
by default, it will not be connected
to any other model.

If no model is named \code{original}
(default is \code{"original"}), then no
model is colored as the original model.
}

\subsection{User-Provided Models}{

If \code{object} contained one or more
user-provided models which are not
generated automatically by
\code{\link[=model_set]{model_set()}} or similar functions
(e.g., \code{\link[=gen_models]{gen_models()}}), then the
method by Bentler and Satorra (2010)
will be used to determine model
relations. Models connected by an
arrow has a nested relation based on
the NET method by Bentler and Satorra
(2010). An internal function inspired
by \code{\link[semTools:net]{semTools::net()}} is used to
implement the NET method.
}

\subsection{The Size of a Node}{

When a model is scaled by \code{x},
which usually is the BIC posterior
probability, its size is determined
by:

\code{max_size * (x - min(x))/(max(x) - min(x)) + min_size}
}
}
\examples{

library(lavaan)

mod <-
"
m1 ~ x
y ~ m1
"

fit <- sem(mod, dat_serial_4, fixed.x = TRUE)

out <- model_set(fit)
out

g <- model_graph(out)
plot(g)

}
\references{
Bentler, P. M., & Satorra, A. (2010).
Testing model nesting and equivalence.
\emph{Psychological Methods, 15}(2),
111--123. \doi{10.1037/a0019625}
Asparouhov, T., & MuthÃ©n, B. (2019).
Nesting and Equivalence Testing for
Structural Equation Models.
\emph{Structural Equation Modeling: A Multidisciplinary Journal, 26}(2),
302--309. \doi{10.1080/10705511.2018.1513795}
}
\author{
Shu Fai Cheung \url{https://orcid.org/0000-0002-9871-9448}
The internal function for nesting
inspired by \code{\link[semTools:net]{semTools::net()}} by
Terrence D. Jorgensen.
}
