% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/c_partables.R
\name{c.partables}
\alias{c.partables}
\alias{c.model_set}
\title{Combine Parameter Tables}
\usage{
\method{c}{partables}(...)

\method{c}{model_set}(...)
}
\arguments{
\item{...}{An arbitrary number of
objects. All invalid objects (see
details) will be discarded. If an
object is named and is not
\code{partables} object, its name will be
used.}
}
\value{
A \code{partables}-class objects with
all the objects supplied combined
together. If an object is
a \code{lavaan}-class object, its
parameter table will be retrieved
by \code{\link[lavaan:lavParTable]{lavaan::parameterTable()}}.
If an object is a \code{model_set}-class
object, the stored \code{partables}-class
object will be retrieved.
}
\description{
The c-method for
\code{partables}-class object.
}
\details{
It is the 'c' method of
\code{partables}-class objects.

Each object must be (a) a
\code{partables}-class object,
(b) a \code{model_set}-class object,
(b) a \code{lavaan}-class object,
(c) a parameter table of
the class \code{lavaan.data.frame()},
usually generated by
\code{\link[lavaan:lavParTable]{lavaan::parameterTable()}}.
Other objects will be discarded.

Names will be used when combining
objects. If two objects have the same
names, then only the first one will be
retained. No warning message will be
issued. Users are encouraged to
explicitly name all objects carefully.

Note that, to invoke this method,
the first object must be a
\code{partables} object.
}
\section{Functions}{
\itemize{
\item \code{c(model_set)}: The c-method for \code{model_set} objects.
It will replace the first object by the stored
partables and then call the c-method of \code{partables} objects.

}}
\examples{

# TO UPDATE

library(lavaan)


moda <-
"
x3 ~ a*x1 + b*x2
x4 ~ a*x1
ab := a*b
"

fita <- sem(moda, dat_path_model, fixed.x = TRUE)

outa <- model_set(fita,
                  progress = FALSE,
                  parallel = FALSE)

modb <-
"
x3 ~ a*x1 + b*x2
x4 ~ a*x2
ab := a*b
"

fitb <- sem(modb, dat_path_model, fixed.x = TRUE)

outb <- model_set(fitb,
                  progress = FALSE,
                  parallel = FALSE)

mod2 <-
"
x2 ~ 0*x3 + 0*x4
x1 ~ 0*x3
"
fit2 <- sem(mod2, dat_path_model)

mod3 <-
"
x2 ~ x3 + 0*x4
x1 ~ x3
"
fit3 <- sem(mod3, dat_path_model)

out <- c(outa$models, user2 = fit2, outb$models, user3 = fit3)
out

out2 <- c(outa, user2 = fit2, outb$models, user3 = fit3)
out2

out3 <- c(outa, user2 = fit2, outb, user3 = fit3)
out3

}
\author{
Shu Fai Cheung \url{https://orcid.org/0000-0002-9871-9448}
}
